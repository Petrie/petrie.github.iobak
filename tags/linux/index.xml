<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Petrie&#39;s Home</title>
    <link>http://petrie.github.io/tags/linux/</link>
    <description>Recent content in Linux on Petrie&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 26 Sep 2016 13:27:45 +0000</lastBuildDate>
    
	<atom:link href="http://petrie.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何将Linux命令的结果作为下一个命令的参数</title>
      <link>http://petrie.github.io/post/2016-09-26-%E5%A6%82%E4%BD%95%E5%B0%86linux%E5%91%BD%E4%BB%A4%E7%9A%84%E7%BB%93%E6%9E%9C%E4%BD%9C%E4%B8%BA%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0/</link>
      <pubDate>Mon, 26 Sep 2016 13:27:45 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2016-09-26-%E5%A6%82%E4%BD%95%E5%B0%86linux%E5%91%BD%E4%BB%A4%E7%9A%84%E7%BB%93%E6%9E%9C%E4%BD%9C%E4%B8%BA%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0/</guid>
      <description>一、反引号 &amp;lsquo;`&amp;rsquo; echo `date` 二、$() echo $(date) 三、find exec参数 四、xargs find ./ | xarges ls -l</description>
    </item>
    
    <item>
      <title>Mac下“.bashrc”不生效</title>
      <link>http://petrie.github.io/post/2016-06-29-mac%E4%B8%8B-bashrc%E4%B8%8D%E7%94%9F%E6%95%88/</link>
      <pubDate>Wed, 29 Jun 2016 10:54:10 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2016-06-29-mac%E4%B8%8B-bashrc%E4%B8%8D%E7%94%9F%E6%95%88/</guid>
      <description>新建&amp;rdquo;~/.bash_profile&amp;rdquo;，写入下面代码： if [ &amp;quot;${BASH-no}&amp;quot; != &amp;quot;no&amp;quot; ]; then [ -r ~/.bashrc ] &amp;amp;&amp;amp; . ~/.bashrc fi 原因是执行.bashrc需要执行</description>
    </item>
    
    <item>
      <title>Kafka server安装教程</title>
      <link>http://petrie.github.io/post/2016-06-29-kafka-server%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</link>
      <pubDate>Wed, 29 Jun 2016 00:01:13 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2016-06-29-kafka-server%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</guid>
      <description>下载解压 下载地址： https://www.apache.org/dyn/closer.cgi?path=/kafka/0.10.0.0/kafka_2.11-0.10.0.0.tgz &amp;gt; tar -xzf kafka_2.11-0.10.0.0.tgz &amp;gt; cd kafka_2.11-0.10.0.0 启动Kafka服务 Kafka服务需要安装ZooKeeper。如果没有你可以使用kafka附带的临时脚本来启</description>
    </item>
    
    <item>
      <title>curl调用上传文件接口</title>
      <link>http://petrie.github.io/post/2016-06-28-curl%E8%B0%83%E7%94%A8%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Tue, 28 Jun 2016 20:07:11 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2016-06-28-curl%E8%B0%83%E7%94%A8%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8E%A5%E5%8F%A3/</guid>
      <description>一般场景下，使用curl模拟get，post请求。 今天的manpage是模拟上传文件请求 -F 参数执行文件路径和其他参数 -H 自定义 Host curl -F &amp;quot;file=@/home/petrie/illegal_driver02.txt;name=file&amp;quot; &amp;quot;http://127.0.0.1:8000/biz/driver_mis/driver/uploadcsv&amp;quot; -H mis.petrie.com.cn</description>
    </item>
    
    <item>
      <title>shell命令行for语句</title>
      <link>http://petrie.github.io/post/2016-06-23-shell-for/</link>
      <pubDate>Thu, 23 Jun 2016 15:14:34 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2016-06-23-shell-for/</guid>
      <description>很久就想写一篇关于shell的for语法的博客了。预谋了很久，今天终于提笔 核心语法 for i in `ls`;do echo $i;done; 常见场景： &amp;gt;查询一组host对应的IP f</description>
    </item>
    
    <item>
      <title>CI 环境配置</title>
      <link>http://petrie.github.io/post/2015-03-05-ci-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2015-03-05-ci-config/</guid>
      <description>502 bad getway 原因：php-cgi 没启动 Your system folder path does not appear to be set correctly. Please open the following file and correct this: index.php 原因：CI框架 system,application 路径配置错误</description>
    </item>
    
    <item>
      <title>LNMP环境搭建（一）安装前准备</title>
      <link>http://petrie.github.io/post/2012-10-23-lnmp-first-prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2012-10-23-lnmp-first-prepare/</guid>
      <description>博客后续将退出LNMP环境搭建系列博文： 安装依赖库： &amp;gt;yum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers 以上命令在</description>
    </item>
    
    <item>
      <title>Linux Svn Cmd</title>
      <link>http://petrie.github.io/post/2015-01-30-linux-svn-cmd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2015-01-30-linux-svn-cmd/</guid>
      <description>svn diff [-r PREV] PATH 对比当前本地的工作拷贝文件(working copy)和任意版本A的差异 svn diff -r94239 对比任意历史版本A和任意历史版本B的差异 svn diff -r94239:94127</description>
    </item>
    
    <item>
      <title>Linux下搭建Samba服务器</title>
      <link>http://petrie.github.io/post/2013-02-18-linux-samba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2013-02-18-linux-samba/</guid>
      <description>##Linux下搭建Samba服务器## 安装文件 三种方式获取安装文件 1. 网络下载 在http://rpmfind.net搜索&amp;quot;samb</description>
    </item>
    
    <item>
      <title>Linux挂载ISO文件</title>
      <link>http://petrie.github.io/post/2012-09-18-linux-mount-iso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2012-09-18-linux-mount-iso/</guid>
      <description>Linux 下绑定ISO文件 ## 在/mnt下创建/mnt/centos_iso文件夹 &amp;gt;mkdir /mnt/centos_iso 将/home/cksamba/share/下的centos.is</description>
    </item>
    
    <item>
      <title>Tar in Linux</title>
      <link>http://petrie.github.io/post/2012-10-19-linux-tar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2012-10-19-linux-tar/</guid>
      <description>将当前文件夹下的所有以.jpg为后缀的文件打包到all.tar.gz 压缩包内: &amp;gt;tar -czvf all.tar.gz * .jpg 将压缩文件all.tar.gz解压到文件夹dir下:</description>
    </item>
    
    <item>
      <title>VIM 插件</title>
      <link>http://petrie.github.io/post/2015-03-25-my-vim-plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2015-03-25-my-vim-plugin/</guid>
      <description>NERDTree neocomplcache</description>
    </item>
    
    <item>
      <title>Vim快速选中、删除、复制引号或括号中的内容</title>
      <link>http://petrie.github.io/post/2014-03-06-vim-copy-mv-delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2014-03-06-vim-copy-mv-delete/</guid>
      <description>http://www.Linuxsong.org/2010/09/vim-quick-select-copy-delete/</description>
    </item>
    
    <item>
      <title>利用CentOS.ISO配置本地yum源</title>
      <link>http://petrie.github.io/post/2012-09-18-linux-yum-iso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2012-09-18-linux-yum-iso/</guid>
      <description>#扯淡# 公司的网络要用代理，许多非常cool的东西都玩不了，真垃圾。 组长让搞一个LNMP的教程。 上次在开发机上乱搞，把LNMP搞乱了，程序不</description>
    </item>
    
    <item>
      <title>易忘vim命令1</title>
      <link>http://petrie.github.io/post/2012-09-19-useful-vim-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2012-09-19-useful-vim-1/</guid>
      <description>%: [括号匹配]可以让光标从它当前所在的括号跳转到与它相匹配的括号上去 n+空格键： 那个n表示【数字】，例如20。按下数字后在按空格键盘，光标会</description>
    </item>
    
    <item>
      <title>易忘vim命令2</title>
      <link>http://petrie.github.io/post/2012-09-19-useful-vim-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://petrie.github.io/post/2012-09-19-useful-vim-2/</guid>
      <description>ZZ：这是大写的Z，若档案没有改动，则不储存离开，若档案已经被更动过，则存储后离开！ ：w [filename] 将编辑的数据储存成另一个档案 ：r [filename] 在编辑数据中，读</description>
    </item>
    
  </channel>
</rss>